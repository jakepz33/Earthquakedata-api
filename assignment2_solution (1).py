# -*- coding: utf-8 -*-
"""Assignment2-solution.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I_D_yndoovfTK9Fl2yLvK_wx2wmoWsIn
"""

!pip install xmltodict

#FINAL SOLUTION
#install xml
#import modules
!pip install xmltodict

import json, requests, xmltodict, datetime, csv, google.colab.files


#timeconverter function
def timeconverter(num):
  origin_time_sec = num / 1000   #convert to seconds
  datetime_timestamp = datetime.datetime.utcfromtimestamp(origin_time_sec) #convert to datetime object

  datetime_adj_timestamp = datetime_timestamp - datetime.timedelta(hours = 7) #subtract 7 hours to asjust for time zone difference
  #convert to human-interpretable string
  #string would say: 'September 01, 2022 at 12:00:00 AM'
  time_str = datetime_adj_timestamp.strftime('%B %d, %Y at %I:%M:%S %p')

  return time_str

#return COUNTY and STATE as well as 'IN THE OCEAN'
def county_state(x, y):
  
  base_url =  f'https://api.opencagedata.com/geocode/v1/xml?q={x}+{y}&key=47e8f7652c6140a6a02492faf86674c7'
  response = requests.get(base_url)
  if response:
    try:
      data_b = xmltodict.parse(response.text)
      county = data_b["response"]["results"]["result"]["components"]["county"]
      #component = data_b["response"]["results"]["result"]["components"]["country"]
      state = data_b["response"]["results"]["result"]["components"]["state"]
      return (f'{county}, {state}')
      
    except:
      in_ocean = 'in the Ocean'
      return in_ocean

  else:
    print('error')

#NEEDED A SINGLE VARIABLE FOR COUNTY and 'N/A' for excel sheet
def count_y(x, y):
  
  base_url =  f'https://api.opencagedata.com/geocode/v1/xml?q={x}+{y}&key=47e8f7652c6140a6a02492faf86674c7'
  response = requests.get(base_url)
  if response:
    try:
      data_b = xmltodict.parse(response.text)
      county = data_b["response"]["results"]["result"]["components"]["county"]
      #component = data_b["response"]["results"]["result"]["components"]["country"]
      state = data_b["response"]["results"]["result"]["components"]["state"]
      return county
      
    except:
      in_ocean = 'N/A'
      return in_ocean

  else:
    print('error')
    
#NEEDED A SINGLE VARIABLE FOR STATE and 'N/A' for excel sheet
def _state(x, y):
  
  base_url =  f'https://api.opencagedata.com/geocode/v1/xml?q={x}+{y}&key=47e8f7652c6140a6a02492faf86674c7'
  response = requests.get(base_url)
  if response:
    try:
      data_b = xmltodict.parse(response.text)
      county = data_b["response"]["results"]["result"]["components"]["county"]
      #component = data_b["response"]["results"]["result"]["components"]["country"]
      state = data_b["response"]["results"]["result"]["components"]["state"]
      return state
      
    except:
      in_ocean = 'N/A'
      return in_ocean

  else:
    print('error')
#main code

#create file
with open("earthquakes.csv", "w") as file:
  writer = csv.writer(file, lineterminator = '\n')
  header = ['time', 'magnitude', 'latitude', 'longitude', 'county', 'state']
  writer.writerow(header)

response = requests.get("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_hour.geojson")


#test connection:
if response:
  #print("connection ")
  data = json.loads(response.text)
  #print(data)
  features = data['features']
  
  #get the maginitude
  for line in features: 
    mag = line['properties']['mag']
    time = line['properties']['time']
    geo = line['geometry']['coordinates'][0:2]
    #longitude before latitude
    long = line['geometry']['coordinates'][0]
    lat = line['geometry']['coordinates'][1]
    date_time = timeconverter(time)#call time converter function

    #Use XML to parse data and convert longitude and latitude to an actual COUNTY and STATE
    #calling functions
    location = county_state(lat, long)
    county = count_y(lat, long)
    state = _state(lat, long)

    print(f'Magnitude {mag} earthquake on {date_time} and located at {geo} in {location}')
    #append data
    with open("earthquakes.csv", "a") as file:
      writer = csv.writer(file, lineterminator = '\n')
      line = [date_time, mag, lat, long, county, state]
      writer.writerow(line)

  google.colab.files.download('earthquakes.csv')

else:
  print("no connection")

